

import java.util.*;
import java.lang.*;
import java.io.*;

// Java program to rearrange characters in a string 
// so that no two adjacent characters are same. 

class CharComparator implements Comparator<Key>{
    
    public int compare(Key k1, Key k2){
        if(k1.freq < k2.freq)
            return 1;
        else if(k1.freq > k2.freq)
            return -1;
        else
            return 0;
    }
    
}

class Key{
    
    int freq;
    char val;
    
    Key(int fr, char va){
        freq = fr;
        val = va;
    }
    
}

class LogicWrapper
{
    
    static int MAX_CHAR = 26;
    
    static void shuffleString(String str){
        
        int n = str.length();
        
        int count[] = new int[MAX_CHAR];
        
        for(int i = 0; i<n; i++){
            count[str.charAt(i) - 'a']++;
        }
        
        PriorityQueue<Key> pQueue = new PriorityQueue<>(new CharComparator());
        
        for(char ch = 'a' ; ch<= 'z' ; ch++ ){
            int ind = ch - 'a';
            if(count[ind] > 0)
                pQueue.add(new Key(count[ind], ch));
        }
        
        String result = "";
        
        Key prev = new Key(-1, '#');
        
        while(pQueue.size() != 0){
            
            Key k = pQueue.peek();
            pQueue.poll();
            
            result = result + k.val;
            
            if(prev.freq > 0)
                pQueue.add(prev);
            
            (k.freq)--;
            prev = k;
            
            
        }
        
        if (n != str.length()) 
            System.out.println(" Not valid String "); 
        else
            System.out.println(result);
        
    }
    
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		
		String str = "bbbaa" ; 
        shuffleString(str); 
	}
}
